/*
과제4
파일 : 과제4.html, 과제4.js, 과제4.css
	let 도서목록 = '혼자공부하는 자바' , '이것이자바다' , ' 열혈 C언어'
	let 대여목록 = []

	주제 : 도서 관리 시스템
	조건1 : 관리자입장
		1. 도서 등록[도서명]
			1. 도서 중복 불가[중복검사] - indexof   - 확인
			5. 5~10사이만 도서명 입력가능 - length  - 확인

			ex) 번호 	도서 			도서 대여여부	비고  - 확인
			    1	혼자공부하는 자바		대여중		삭제[대여중에는 삭제 불가능하게]
			    2	이것이자바다		대여가능		삭제
			    3	열혈 C언어		대여가능		삭제

		2. 도서 현황 출력
			1. 도서 번호 출력 -확인
			2. 도서명       -확인
			3. 도서 대여여부  -확인
			4. 도서 삭제     -확인


	조건2 : 고객 입장
		1. 도서목록
			1. 번호 2. 도서명 3. 도서 대여버튼 -확인[ 3. 도서 대여여부 4. 도서 반납/대여]로 변경
						-도서 대여
						1. 없는 도서명 불가 - 없는 도서는 리스트에 없어서 대여불가
						2. 대여중인 도서 불가능 - 확인
		2. 도서 반납
			1. 없는 도서명은 불가능 - 없는 도서는 리스트에 없어서 반납불가
			2. 대여중인 도서가 아니면 불가능 - 확인


			ex) 번호 	도서 			도서 대여여부	비고
			    1	혼자공부하는 자바		대여중		대여/반납
			    2	이것이자바다		대여가능		대여/반납
			    3	열혈 C언어		대여가능		대여/반납
*/


let 도서목록 = ['혼자공부하는 자바' , '이것이자바다' , '열혈 C언어']	// 도서목록 기본값 
let 대여목록 = []											// 대여목록이 들어갈 위치선언


//-------------------------- 관리자 페이지 s --------------------------//
function add( ) { // 도서추가 함수 s
	
	let join = document.querySelector('.add1').value	//  html에서 인풋값 불러와서 join에 입력
	for(let i = 0 ; i<=도서목록.length ; i++){				// i는 0이고 i가 도서목록의 길이보다 작을경우 i는 1씩 증가
		if(도서목록.indexOf(join) != -1){					// 만약에 도서목록과 join을 비교한 값이 -1이 아닐경우 [비교해서 중복일시 인덱스값출력/없다면-1출력]
			//console.log('등록불가 :' + i)				// 확인문구
			alert('등록된 책입니다.')						// '등록된 책입니다.'메시지 출력
			return false;								// 반복중지
		}
		else if(join.length < 5 || join.length > 10){	// 또 만약에 join의 길이가 5보다 작고 10보다 크다면
			//console.log('등록불가2 :' + i)				// 확인문구
			alert('5글자이상 10글자이하로 입력해주세요.')			// '5글자이상 10글자이하로 입력해주세요.'메시지 출력
			return false;								// 반복중지
		}
		else{											// 전부다 아닐경우
			//console.log(join)							// 확인문구
			도서목록.push(join)							// 도서목록에 join값(새로운요소)추가
			alert('등록되었습니다.')							// 등록확인메시지
			새로고침()										// 리스트 새로고침
			return false;								// 반복중지
		}
	}
}// 도서추가 함수 e
	

	
	
function 새로고침(){ // 새로고침 함수 s
	
	let list = `<tr><th>등록번호</th><th>도서명</th><th>상태</th><th>비고</th></tr>` // 관리자 테이블 제목
	
	for(let i = 0 ; i < 도서목록.length ; i++){ 	// i는 0이고 i가 도서목록의 길이보다 작다면 i는 1씩 증가하고
	
		if( 대여목록.includes( 도서목록[i] ) ){		// 만약에 대여목록과 도서목록[i]를 비교하여 겹칠경우
			// true - [등록번호 : i+1  / 도서목록[i] / 상태 : 삭제불가 / 버튼 : 삭제불가(클릭이벤트x)] 테이블을 list에 입력
			list += `<tr><td>${i+1}</td><td>${도서목록[i]}</td><td class='대여여부'>삭제불가</td><td><button onclick="삭제불가()">삭제불가</button></td></tr>`
		}
		else{// false - [등록번호 : i+1 / 도서목록[i] / 상태 : 삭제가능 / 버튼 : onclick="삭제(${i}) 삭제하기 버튼]을 list에 입력 
			list += `<tr><td>${i+1}</td><td>${도서목록[i]}</td><td class='대여여부'>삭제가능</td><td><button onclick="삭제(${i})">삭제하기</button></td></tr>`
		}
	}
	document.querySelector('.도서리스트').innerHTML=list // 입력된 list를 html class='도서리스트'에 출력
	새로고침2() // 새로고침2() 함수시작 [ 고객페이지 새로고침 ]
}// 새로고침 함수 e

function 삭제( dno ){ // 삭제함수 s
	도서목록.splice( dno , 1 ) // 해당 도서목록 삭제
	새로고침( )				// 관리자 도서리스트 새로고침
	새로고침2( )				// 고객페이지 새로고침
}// 삭제함수 e
//-------------------------- 관리자 페이지 e --------------------------//



//-------------------------- 고객 페이지 s --------------------------//

function 새로고침2(){			// 새로고침2 함수 s
		
	let list = `<tr><th>등록번호</th><th>도서명</th><th>상태</th><th>비고</th></tr>` // 고객 테이블 제목
	
	for(let i = 0 ; i < 도서목록.length ; i++){		// i는 0이고 i가 도서목록길이보다 작다면 i는 1씩 증가하고
	
		if( 대여목록.includes( 도서목록[i] ) ){			// 만약에 대여목록과 도서목록[i]를 비교하여 같을경우/다를경우
			// true - [등록번호 : i+1  / 도서목록[i] / 대여여부 : 대여중 / onclick="반납(${i})" 반납버튼]을 list에 입력
			list += `<tr><td>${i+1}</td><td>${도서목록[i]}</td><td class='대여여부'>대여중</td><td><button onclick="반납(${i})">반납</button></td></tr>`
		
		}else{
			// false - [등록번호 : i+1 / 도서목록[i] / 대여여부 : 대여가능 / 버튼 : onclick="대여(${i}) 대여하기버튼]을 list에 입력 
			list += `<tr><td>${i+1}</td><td>${도서목록[i]}</td><td class='대여여부'>대여가능</td><td><button onclick="대여(${i})">대여가능</button></td></tr>`
		}
	}
	document.querySelector('.대여리스트').innerHTML=list // 입력된 list를 html class='대여리스트'에 출력
}// 새로고침2 함수 e

function 대여( dno ){							// 대여함수 s
	대여목록.push(도서목록[dno])					// 해당 도서를 대여목록에 추가
	//console.log(대여목록)					// 확인용
	새로고침2()								// 새로고침2 - 고객페이지 새로고침
	새로고침( )								// 새로고침  - 관리자페이지 새로고침
}											// 대여함수 e

function 반납(dno){							// 반납함수 s
	//console.log(dno)						// 확인용 - dno는 도서목록 인덱스와 같고 대여 순서와 다름 ex) 132 312등등
	let 반납1 = 도서목록[dno]					// 도서목록[dno]로 해당 요소불러내 반납1에 입력하여 클릭한 도서목록가져오기
	//console.log(반납1)						// 확인용 정상적으로 들어옴
	for(let i = 0 ; i < 대여목록.length ; i++) // i는 0이고 i가 대여목록길이보다 작으면 i는 1씩 증가하고
		if(반납1.includes(대여목록[i])){		// 만약에 반납1에 들어온 요소와 대여목록[i]를 비교하여 같을경우/다를경우
			대여목록.splice( i , 1)			// true - 대여목록의 인덱스 i를 1(삭제)한다.
	}										// else 생략
	새로고침2()								// 새로고침2 - 고객페이지 새로고침
	새로고침( )								// 새로고침  - 관리자페이지 새로고침
								
}											// 대여함수 e						
//-------------------------- 고객 페이지 e --------------------------//


